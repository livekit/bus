// Code generated by protoc-gen-psrpc v0.2.1, DO NOT EDIT.
// source: empty_service.proto

package empty_service

import psrpc "github.com/livekit/psrpc"

// ======================
// Empty Client Interface
// ======================

type EmptyClient interface {
}

// ==========================
// Empty ServerImpl Interface
// ==========================

type EmptyServerImpl interface {
}

// ======================
// Empty Server Interface
// ======================

type EmptyServer interface {
	// Close and wait for pending RPCs to complete
	Shutdown()

	// Close immediately, without waiting for pending RPCs
	Kill()
}

// ============
// Empty Client
// ============

type emptyClient struct {
	client *psrpc.RPCClient
}

// NewEmptyClient creates a psrpc client that implements the EmptyClient interface.
func NewEmptyClient(clientID string, bus psrpc.MessageBus, opts ...psrpc.ClientOption) (EmptyClient, error) {
	rpcClient, err := psrpc.NewRPCClient("Empty", clientID, bus, opts...)
	if err != nil {
		return nil, err
	}

	return &emptyClient{
		client: rpcClient,
	}, nil
}

// ============
// Empty Server
// ============

type emptyServer struct {
	svc EmptyServerImpl
	rpc *psrpc.RPCServer
}

// NewEmptyServer builds a RPCServer that will route requests
// to the corresponding method in the provided svc implementation.
func NewEmptyServer(serverID string, svc EmptyServerImpl, bus psrpc.MessageBus, opts ...psrpc.ServerOption) (EmptyServer, error) {
	s := psrpc.NewRPCServer("Empty", serverID, bus, opts...)

	return &emptyServer{
		svc: svc,
		rpc: s,
	}, nil
}

func (s *emptyServer) Shutdown() {
	s.rpc.Close(false)
}

func (s *emptyServer) Kill() {
	s.rpc.Close(true)
}

var psrpcFileDescriptor0 = []byte{
	// 90 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x12, 0x4e, 0xcd, 0x2d, 0x28,
	0xa9, 0x8c, 0x2f, 0x4e, 0x2d, 0x2a, 0xcb, 0x4c, 0x4e, 0xd5, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17,
	0x52, 0x28, 0x28, 0x2e, 0x2a, 0x48, 0xd6, 0xcb, 0xcc, 0x2b, 0x49, 0x2d, 0xca, 0x4b, 0xcc, 0xd1,
	0x2b, 0x49, 0x2d, 0x2e, 0xd1, 0x03, 0x2b, 0x84, 0xaa, 0x33, 0x62, 0xe7, 0x62, 0x75, 0x05, 0xf1,
	0x9d, 0x04, 0xa2, 0xf8, 0xf4, 0x51, 0x8c, 0x48, 0x62, 0x03, 0x9b, 0x61, 0x0c, 0x08, 0x00, 0x00,
	0xff, 0xff, 0x16, 0x6b, 0xfe, 0x68, 0x5a, 0x00, 0x00, 0x00,
}
